import{_ as s,o as a,c as e,Q as o}from"./chunks/framework.73b92be7.js";const y=JSON.parse('{"title":"useFetchAuth","description":"","frontmatter":{},"headers":[],"relativePath":"composables/use-fetch-auth.md","filePath":"composables/use-fetch-auth.md"}'),l={name:"composables/use-fetch-auth.md"},c=o(`<h1 id="usefetchauth" tabindex="-1">useFetchAuth <a class="header-anchor" href="#usefetchauth" aria-label="Permalink to &quot;useFetchAuth&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Для правильной работы функции нужно:</p><ul><li>Выставить значение <code>csrftoken</code> в <code>cookie</code></li></ul></div><p>Функция для работы с эдпоинтами с авторизацией. В ней используется <code>useFetch</code>, поэтому используется она один в один.</p><p>Решает 2 задачи:</p><ul><li>Проксит <code>cookie</code> клиента в серверные запросы при <code>SSR</code></li><li>Добавляет заголовок <code>X-CSRFToken</code> со значением из <code>cookie</code> <code>csrftoken</code></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Если <code>cookie</code> будут переданы в серверный запрос, то функция не проксирует их на клиент.</p><p>Соответственно, если есть задачи при первом входе пользователя на страницу выставить ему <code>cookie</code>, нужно решать эту задачу отдельно, и делать запрос на клиенте.</p></div><h2 id="параметры" tabindex="-1">Параметры <a class="header-anchor" href="#параметры" aria-label="Permalink to &quot;Параметры&quot;">​</a></h2><ul><li><code>url</code> - <code>URL</code> для запроса</li><li><code>options</code> - параметры запроса</li></ul><h2 id="возвращаемыи-объект" tabindex="-1">Возвращаемый объект <a class="header-anchor" href="#возвращаемыи-объект" aria-label="Permalink to &quot;Возвращаемый объект&quot;">​</a></h2><p>Функция возвращает тоже самое, что и <code>useFetch</code>.</p><h2 id="использование" tabindex="-1">Использование <a class="header-anchor" href="#использование" aria-label="Permalink to &quot;Использование&quot;">​</a></h2><p>Функция используется один в один как <code>useFetch</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">data</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useFetch</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">&gt;(</span><span style="color:#9ECBFF;">&quot;/auth/csrf/&quot;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">  baseURL: </span><span style="color:#B392F0;">useRuntimeConfig</span><span style="color:#E1E4E8;">().public.apiBase</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">data</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">error</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useFetch</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">&gt;(</span><span style="color:#032F62;">&quot;/auth/csrf/&quot;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">  baseURL: </span><span style="color:#6F42C1;">useRuntimeConfig</span><span style="color:#24292E;">().public.apiBase</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div>`,13),t=[c];function n(p,r,i,d,u,h){return a(),e("div",null,t)}const _=s(l,[["render",n]]);export{y as __pageData,_ as default};
