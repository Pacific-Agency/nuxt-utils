import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.8b850e37.js";const m=JSON.parse('{"title":"UtilsInputMasked","description":"","frontmatter":{},"headers":[],"relativePath":"components/input-masked.md","filePath":"components/input-masked.md"}'),o={name:"components/input-masked.md"},e=n(`<h1 id="utilsinputmasked" tabindex="-1">UtilsInputMasked <a class="header-anchor" href="#utilsinputmasked" aria-label="Permalink to &quot;UtilsInputMasked&quot;">​</a></h1><p>Данный компонент выводит текстовое поле с маской.</p><p>Компонент может быть использован несколькими способами:</p><ol><li>Можно использовать в форме с помощью <code>formData</code>. Для этого в компоненте предусмотрен пропс <code>id</code></li><li>Можно использовать через <code>v-model</code>.</li></ol><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Для работы данного компонента необходимо обновить Vue до версии <code>3.3</code>, а также включить <code>defineModel</code>.</p><details class="details custom-block"><summary>Как включить <code>defineModel</code></summary><p>Для того, чтобы включить <code>defineModel</code> необходимо добавить в <code>nuxt.config.ts</code>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineNuxtConfig</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  vue: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    defineModel: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineNuxtConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  vue: {</span></span>
<span class="line"><span style="color:#24292E;">    defineModel: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></details></div><h2 id="пропсы" tabindex="-1">Пропсы <a class="header-anchor" href="#пропсы" aria-label="Permalink to &quot;Пропсы&quot;">​</a></h2><ul><li><p><code>id</code> — идентификатор поля ввода. Устанавливает <code>id</code> и <code>name</code>, которые используются в <code>formData</code>.</p></li><li><p><code>label</code> — плейсхолдер для поля. Задает параметр <code>placeholder</code>.</p></li><li><p><code>placeholder</code> — плейсхолдер для поля. Задает параметр <code>placeholder</code>.</p></li><li><p><code>disabled</code> — является ли поле выключенным. Задает параметр <code>disabled</code>.</p></li><li><p><code>minlength</code> — определяет минимальную длину инпута. Задает параметр <code>minlength</code>.</p></li><li><p><code>maxlength</code> — определяет максимальную длину инпута. Задает параметр <code>maxlength</code>.</p></li><li><p><code>pattern</code> — регулярное выражение, которому должно соответствовать значение инптуа. Задает параметр <code>pattern</code>.</p></li><li><p><code>mask</code> — определяет маску, которому будет соответствовать значение инпута. Задает параметр <code>dataMaska</code>.</p></li><li><p><code>required</code> — является ли поле обязательным для заполнения. Выставляет атрибут <code>required</code>.</p><p><strong>По умолчанию:</strong> <code>true</code>.</p></li><li><p><code>type</code> — тип поля.</p><p><strong>По умолчанию:</strong> <code>text</code>.</p></li></ul><h2 id="стилизация" tabindex="-1">Стилизация <a class="header-anchor" href="#стилизация" aria-label="Permalink to &quot;Стилизация&quot;">​</a></h2><p>Для стилизации компонента подготовлены классы:</p><ul><li><code>utils-input-masked-container</code>. Его стилизация влияет на контейнер, в котором находится текстовое поле.</li><li><code>utils-input-masked-label</code>. Его стилизация влияет на <code>label</code>.</li><li><code>utils-input-masked-input</code>. Его стилизация влияет на <code>input</code>.</li></ul><p>При этом <code>label</code> и <code>input</code> можно стилизовать просто используя их селекторы.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Также для стилизации можно использовать глобальные классы, которые стилизуют все компоненты формы.</p><ul><li><code>utils-form-container</code>. Его стилизация влияет на контейнер, в котором находится текстовое поле.</li><li><code>utils-form-label</code>. Его стилизация влияет на <code>label</code>.</li><li><code>utils-form-input</code>. Его стилизация влияет на поле ввода.</li></ul></div><h2 id="использование" tabindex="-1">Использование <a class="header-anchor" href="#использование" aria-label="Permalink to &quot;Использование&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">text</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#FDAEB7;font-style:italic;">UtilsInput</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">v-model</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;text&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;test-field&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">mask</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;##-##&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">placeholder</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Тестовый плейсхолдер&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">text</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">UtilsInput</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">v-model</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;text&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;test-field&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">mask</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;##-##&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">placeholder</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Тестовый плейсхолдер&quot;</span></span>
<span class="line"><span style="color:#24292E;">  /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,14),p=[e];function t(c,r,i,d,E,y){return a(),l("div",null,p)}const h=s(o,[["render",t]]);export{m as __pageData,h as default};
