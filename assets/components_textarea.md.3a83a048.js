import{_ as s,o as a,c as l,O as o}from"./chunks/framework.83c82663.js";const u=JSON.parse('{"title":"UtilsTextArea","description":"","frontmatter":{},"headers":[],"relativePath":"components/textarea.md","filePath":"components/textarea.md"}'),e={name:"components/textarea.md"},n=o(`<h1 id="utilstextarea" tabindex="-1">UtilsTextArea <a class="header-anchor" href="#utilstextarea" aria-label="Permalink to &quot;UtilsTextArea&quot;">​</a></h1><p>Данный компонент выводит многострочное текстовое поле.</p><p>Компонент может быть использован несколькими способами:</p><ol><li>Можно использовать в форме с помощью <code>formData</code>. Для этого в компоненте предусмотрен пропс <code>id</code></li><li>Можно использовать через <code>v-model</code>.</li></ol><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Для работы данного компонента необходимо обновить Vue до версии <code>3.3</code>, а также включить <code>defineModel</code>.</p><details class="details custom-block"><summary>Как включить <code>defineModel</code></summary><p>Для того, чтобы включить <code>defineModel</code> необходимо добавить в <code>nuxt.config.ts</code>:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineNuxtConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">vite</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">vue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">defineModel</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></details></div><h2 id="пропсы" tabindex="-1">Пропсы <a class="header-anchor" href="#пропсы" aria-label="Permalink to &quot;Пропсы&quot;">​</a></h2><ul><li><p><code>id</code> — идентификатор поля ввода. Устанавливает <code>id</code> и <code>name</code>, которые используются в <code>formData</code>.</p></li><li><p><code>label</code> — плейсхолдер для поля. Задает параметр <code>placeholder</code>.</p></li><li><p><code>placeholder</code> — плейсхолдер для поля. Задает параметр <code>placeholder</code>.</p></li><li><p><code>required</code> — является ли поле обязательным для заполнения. Выставляет атрибут <code>required</code>.</p><p><strong>По умолчанию:</strong> <code>true</code>.</p></li><li><p><code>rows</code> — тип поля.</p><p><strong>По умолчанию:</strong> <code>3</code>.</p></li></ul><h2 id="стилизация" tabindex="-1">Стилизация <a class="header-anchor" href="#стилизация" aria-label="Permalink to &quot;Стилизация&quot;">​</a></h2><p>Для стилизации компонента подготовлены классы:</p><ul><li><code>utils-textarea-container</code>. Его стилизация влияет на контейнер, в котором находится текстовое поле.</li><li><code>utils-textarea-label</code>. Его стилизация влияет на <code>label</code>.</li><li><code>utils-textarea-textarea</code>. Его стилизация влияет на <code>textarea</code>.</li></ul><p>При этом <code>label</code> и <code>textarea</code> можно стилизовать просто используя их селекторы.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Также для стилизации можно использовать глобальные классы, которые стилизуют все компоненты формы.</p><ul><li><code>utils-form-container</code>. Его стилизация влияет на контейнер, в котором находится текстовое поле.</li><li><code>utils-form-label</code>. Его стилизация влияет на <code>label</code>.</li><li><code>utils-form-input</code>. Его стилизация влияет на поле ввода.</li></ul></div><h2 id="использование" tabindex="-1">Использование <a class="header-anchor" href="#использование" aria-label="Permalink to &quot;Использование&quot;">​</a></h2><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">UtilsTextArea</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test-field</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">:rows</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,14),p=[n];function t(c,r,i,d,D,F){return a(),l("div",null,p)}const A=s(e,[["render",t]]);export{u as __pageData,A as default};
