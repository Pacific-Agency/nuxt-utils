import{_ as i,c as a,a0 as e,o as t}from"./chunks/framework.Ce9r4BRj.js";const r=JSON.parse('{"title":"useFetchAuth","description":"","frontmatter":{},"headers":[],"relativePath":"composables/use-fetch-auth.md","filePath":"composables/use-fetch-auth.md"}'),n={name:"composables/use-fetch-auth.md"};function l(h,s,p,o,c,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="usefetchauth" tabindex="-1">useFetchAuth <a class="header-anchor" href="#usefetchauth" aria-label="Permalink to &quot;useFetchAuth&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Что нужно для правильной работы функции</p><ul><li>Выставить значение <code>csrftoken</code> в <code>cookie</code>.</li><li>Настроить локальный токен в <code>runtimeConfig</code> и <code>.env</code>.</li></ul><div class="tip custom-block"><p class="custom-block-title">Настройка локального токена</p><p>Для начала необходимо добавить параметр в <code>runtimeConfig</code> в <code>dev</code>-режиме.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$development</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  runtimeConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      authToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>После чего нужно добавить соответствующий токен в <code>.env</code>.</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">NUXT_PUBLIC_AUTH_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;token&gt;</span></span></code></pre></div></div></div><p>Функция для работы с эдпоинтами с авторизацией. В ней используется <code>useFetch</code>, поэтому используется она один в один.</p><p>Решает 3 задачи:</p><ul><li>Проксит <code>cookie</code> клиента в серверные запросы при <code>SSR</code>.</li><li>Добавляет заголовок <code>X-CSRFToken</code> со значением из <code>cookie</code> <code>csrftoken</code>.</li><li>В <code>dev</code>-режиме добавляет заголовок <code>Authorization</code> со значением из <code>.env</code>.</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Если <code>cookie</code> будут переданы в серверный запрос, то функция не проксит их на клиент.</p><p>Соответственно, если есть задача при первом входе пользователя на страницу выставить ему <code>cookie</code>, нужно решать эту задачу отдельно, и делать запрос на клиенте.</p></div><h2 id="параметры" tabindex="-1">Параметры <a class="header-anchor" href="#параметры" aria-label="Permalink to &quot;Параметры&quot;">​</a></h2><ul><li><code>url</code> - <code>URL</code> для запроса</li><li><code>options</code> - параметры запроса</li></ul><h2 id="возвращаемыи-объект" tabindex="-1">Возвращаемый объект <a class="header-anchor" href="#возвращаемыи-объект" aria-label="Permalink to &quot;Возвращаемый объект&quot;">​</a></h2><p>Функция возвращает тоже самое, что и <code>useFetch</code>.</p><h2 id="использование" tabindex="-1">Использование <a class="header-anchor" href="#использование" aria-label="Permalink to &quot;Использование&quot;">​</a></h2><p>Функция используется один в один как <code>useFetch</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useFetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/auth/csrf/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  baseURL: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useRuntimeConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().public.apiBase</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,13)]))}const u=i(n,[["render",l]]);export{r as __pageData,u as default};
